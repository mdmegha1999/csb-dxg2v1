{"version":3,"sources":["Store/cartSlice.js","Store/store.js","Components/Home.jsx","Components/Header.jsx","Components/CartCard.jsx","Components/Cart.jsx","Components/Card.jsx","Components/data.js","Components/Menu.jsx","Components/Checkout.jsx","App.js","index.js"],"names":["cartSlice","createSlice","name","initialState","reducers","add","state","action","push","payload","remove","filter","item","actions","store","configureStore","reducer","cart","middleware","getDefaultMiddleware","serializableCheck","Home","className","to","Header","cartItems","useSelector","length","CartCard","props","dispatch","useDispatch","useState","quantity","setQuantity","src","data","pic","alt","price","onClick","product","removeFromCart","Cart","map","i","Card","alert","addtocart","arr","Menu","Data","Checkout","App","index","element","path","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.6491dcf9.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    add(state, action) {\r\n      state.push(action.payload);\r\n    },\r\n    remove(state, action) {\r\n      // console.log(action.payload);\r\n      return state.filter((item) => item.name !== action.payload);\r\n    }\r\n  }\r\n});\r\nexport const { add, remove } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartSlice from \"./cartSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cart: cartSlice\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false\r\n    })\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <div className=\"home-page\">\r\n        <p className=\"welcome\">\r\n          Welcome to Food's<br></br>Kitchen\r\n        </p>\r\n        <NavLink to=\"menu\">\r\n          <button className=\"go-btn\">GO TO MENU</button>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ImSpoonKnife } from \"react-icons/im\";\r\nimport { HiShoppingCart } from \"react-icons/hi\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  const cartItems = useSelector((state) => state.cart);\r\n\r\n  return (\r\n    <header className=\"header-content\">\r\n      <div>\r\n        <NavLink to=\"/\" className=\"Navlink-header\">\r\n          <h2>\r\n            <ImSpoonKnife /> Food's Restaurant\r\n          </h2>\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to=\"/cart\" className=\"Navlink-header\">\r\n          <h2>\r\n            <HiShoppingCart />\r\n            <div className=\"cart-length-circle\">{cartItems.length}</div>\r\n          </h2>\r\n        </NavLink>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { remove } from \"../Store/cartSlice\";\r\n\r\nfunction CartCard(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  let [quantity, setQuantity] = useState(1);\r\n  const addQuantity = (product) => {\r\n    // console.log(product);\r\n    setQuantity(quantity + 1);\r\n    // product.quantity = product.quantity + 1;\r\n  };\r\n  const deleteQuantity = () => {\r\n    if (quantity > 0) {\r\n      setQuantity(quantity - 1);\r\n    }\r\n  };\r\n  const removeFromCart = (product) => {\r\n    dispatch(remove(product.name));\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"food-image\">\r\n        <img src={props.data.pic} className=\"food-logo\" alt=\"food-image\" />\r\n      </div>\r\n      <div>\r\n        <span className=\"food-name\">{props.data.name}</span>\r\n        <br />\r\n        <span className=\"food-price\">Price:{props.data.price}</span>\r\n        <span className=\"food-quantity\">Quantity:{quantity}</span>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"in-btn card-btn\"\r\n          onClick={(product) => addQuantity(props.data)}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          className=\"de-btn card-btn\"\r\n          onClick={(product) => deleteQuantity(props.data)}\r\n        >\r\n          -\r\n        </button>\r\n        <button\r\n          className=\"in-btn remove-to-cart-btn\"\r\n          onClick={(product) => removeFromCart(props.data)}\r\n        >\r\n          Remove from Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartCard;\r\n","import React from \"react\";\r\nimport CartCard from \"./CartCard\";\r\nimport \"./Cart.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Cart() {\r\n  const cartItems = useSelector((state) => state.cart);\r\n\r\n  return (\r\n    <div className=\"all-products-in-cart\">\r\n      {cartItems < 1 ? (\r\n        <div className=\"cart-empty-msg\">Your Cart is Empty</div>\r\n      ) : (\r\n        cartItems.map((product, i) => <CartCard key={i} data={product} />)\r\n      )}\r\n      <div className=\"final-bill\">\r\n        <button>Pay & Checkout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { add } from \"../Store/cartSlice\";\r\n\r\nfunction Card(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  function addtocart(product) {\r\n    alert(product.name + \" \" + \"Added to Cart\");\r\n    dispatch(add(product));\r\n  }\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"food-image\">\r\n        <img src={props.data.pic} className=\"food-logo\" alt=\"food-image\" />\r\n      </div>\r\n      <div>\r\n        <span className=\"food-name\">{props.data.name}</span>\r\n        <br />\r\n        <span className=\"food-price\">Price:{props.data.price}</span>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"in-btn add-to-cart-btn\"\r\n          onClick={(product) => addtocart(props.data)}\r\n        >\r\n          Add to Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","let arr = [\r\n  {\r\n    pic: \"https://i.ibb.co/Pz9hSKv/pic-1.png\",\r\n    name: \"Hamburger\",\r\n    price: 200,\r\n    quantity: 1\r\n  },\r\n\r\n  {\r\n    pic: \"https://i.ibb.co/WzsDqt7/pic.png\",\r\n    name: \"Fries\",\r\n    price: 100,\r\n    quantity: 1\r\n  },\r\n  {\r\n    pic: \"https://i.ibb.co/YyHYp9y/pic-1.png\",\r\n    name: \"Coke\",\r\n    price: 50,\r\n    quantity: 1\r\n  },\r\n  {\r\n    pic: \"https://i.ibb.co/GtvCTQw/pic-1.png\",\r\n    name: \"Pepsi\",\r\n    price: 50,\r\n    quantity: 1\r\n  }\r\n];\r\n\r\nexport default arr;\r\n","import React from \"react\";\r\nimport \"./Menu.css\";\r\nimport Card from \"./Card\";\r\nimport Data from \"./data.js\";\r\nfunction Menu() {\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"all-food-cards\">\r\n        {Data.map((data, i) => (\r\n          <Card key={i} data={data} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport \"./Checkout.css\";\r\nfunction Checkout() {\r\n  return (\r\n    <div className=\"out-of-page\">\r\n      <div className=\"out\">\r\n        <p>Checkout</p>\r\n        <span className=\"text\">Thank you for your order.</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/store\";\nimport Home from \"./Components/Home\";\nimport Header from \"./Components/Header\";\nimport Cart from \"./Components/Cart\";\nimport Menu from \"./Components/Menu\";\nimport Checkout from \"./Components/Checkout\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <BrowserRouter>\n          <Header />\n          <Routes>\n            <Route index element={<Home />} />\n            <Route path=\"cart\" element={<Cart />} />\n            <Route path=\"checkout\" element={<Checkout />} />\n            <Route path=\"menu\" element={<Menu />} />\n          </Routes>\n        </BrowserRouter>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}